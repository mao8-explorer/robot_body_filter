# This is an example filter config for tracked vehicle Absolem from Czech Technical University's
# VRAS team. The robot is equipped with a Realsense D435.
# The field of view of the sensor can only capture a few links, so the `only_links` parameter is set
# to increase performance. Also, the `filter/keep_clouds_organized` parameter is important here to
# retain the 2D structure of the RGBD camera output.
cloud_filter_chain:
  - name: RobotBodyFilter
    type: robot_body_filter/RobotBodyFilterPointCloud2
    params:

      filter/keep_clouds_organized: false # faste prograss
      filter/do_clipping: False
      sensor/min_distance: 0.3
      sensor/max_distance: 2.0
      
      filter/do_contains_test: True
      filter/do_shadow_test: False
      sensor/point_by_point: False


      frames/fixed: camera_depth_optical_frame
      frames/filtering: camera_depth_optical_frame
      frames/output: camera_depth_optical_frame
      frames/sensor: camera_depth_optical_frame

      body_model/inflation/scale: 1.07
      body_model/inflation/padding: 0.05
      body_model/robot_description_param: 'robot_description'
      transforms/buffer_length: 15.0
      transforms/timeout/reachable: 0.4
      transforms/timeout/unreachable: 0.4
      # bounding_sphere/compute: False
      # bounding_box/compute: False
      # oriented_bounding_box/compute: False
      # local_bounding_box/compute: False
      # debug/pcl/inside: False
      # debug/pcl/clip: False
      # debug/pcl/shadow: False
      # debug/marker/contains: False
      # debug/marker/shadow: False
      only_links:
        - panda_link1
        - panda_link2
        - panda_link3
        - panda_link4
        - panda_link5
        - panda_link6
        - panda_link7 
        - panda_hand
        - panda_rightfinger
        - panda_leftfinger
  
